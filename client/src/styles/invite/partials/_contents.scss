@use "sass:math";
@use "./mixin" as m;

@mixin contents {
    .content {
        display: flex;
        justify-content: center;
        min-height: calc(90vh - #{m.$headerHeight});
        isolation: isolate;

        .hr {
            width: 100%;
            height: 1px;
            margin-bottom: 100px;
            background: linear-gradient(to right, transparent, rgba(255, 255, 255, .3), transparent)
        }

        > .title {
            display: flex;
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            box-sizing: border-box;
            font-size: m.$fontTitle;
            color: #fff;
        }

        &-visual {
            .detail {
                position: relative;
                width: 100%;
                isolation: isolate;
                z-index: 1;
            }

            .timer {
                font-size: m.$fontTitle;
                font-weight: 900;
                color: m.$white;
                text-align: center;

                &-title {
                    font-size: m.$fontBody;
                }

                &-count {
                    display: flex;
                    justify-content: center;
                    flex-wrap: nowrap;
                    padding-top: 5px;
                    gap: 4px;
                    font-size: m.$fontTitle;
                    transform: translateZ(0);

                    li {
                        display: flex;
                    }

                    $timers: days, hours, minutes, seconds;
                    $sixteen: 60;
                    @each $timer in $timers {
                        .#{$timer} {
                            .number {
                                @if ($timer == minutes) {
                                    animation: #{$timer} #{$sixteen * $sixteen}s steps($sixteen, jump-none) infinite;
                                } @else if ($timer == hours) {
                                    animation: #{$timer} #{$sixteen * $sixteen * 24}s steps(24, jump-none) infinite;
                                } @else if ($timer == days) {
                                    animation: #{$timer} #{$sixteen * $sixteen * 24 * 365}s steps(365, jump-none) infinite;
                                } @else {
                                    animation: #{$timer} #{$sixteen}s steps($sixteen, jump-none) infinite;
                                }
                                animation-delay: var(--delay-#{$timer}, 0s);
                                counter-reset: #{$timer} var(--#{$timer});

                                &::before {
                                    content: counter(#{$timer}, decimal-leading-zero) " ";
                                }
                            }
                        }
                    }
                }
            }

            .title {
                flex: 1;
                display: flex;
                flex-direction: column;
                align-items: flex-start;
                margin: 0 auto;
                font-weight: 900;
                color: m.$white;
                text-shadow: 0 0 5px rgb(0 0 0 / .3);
                isolation: isolate;

                .text {
                    display: flex;
                    width: 100%;
                    font-size: m.vw(20);
                    isolation: isolate;

                    &:nth-of-type(2) {
                        justify-content: center;
                    }

                    &:last-of-type {
                        justify-content: flex-end;
                    }
                }
            }

            .img {
                flex-shrink: 0;
                overflow: hidden;
                width: 100%;
                aspect-ratio: 1;
                background-color: m.$white;

                &-wrap {
                    display: flex;
                    flex-direction: column;
                    justify-content: center;
                    align-items: center;
                    max-width: 500px;
                    position: relative;
                    border: 10px solid m.$white;
                    margin: 0 auto;
                    box-shadow: 0 0 10px 0 rgb(0 0 0 / .2);
                    background-color: m.$white;

                    strong {
                        display: flex;
                        justify-content: center;
                        padding: 25px 20px 10px;
                        text-align: center;
                        font-size: m.$fontSubTitle;
                        line-height: 140%;
                        background-color: m.$white;
                    }
                }

                img {
                    width: 100%;
                    height: auto;
                    aspect-ratio: 1;
                    object-fit: cover;
                }
            }

            .desc {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                max-width: 600px;
                width: 100%;
                padding: m.vw(40) 0;
                margin: 0 auto;
                text-align: center;
                font-size: m.$fontBody;
                line-height: 200%;
                font-weight: 400;
                font-style: italic;
                color: m.$gray;
                word-break: keep-all;

                &:before,
                &:after {
                    display: flex;
                    justify-content: center;
                    width: 100%;
                    height: m.vw(30);
                    box-sizing: border-box;
                    font-size: m.vw(40);
                    line-height: 100%;
                }

                &:before {
                    content: "“";
                }

                &:after {
                    content: "”";
                    margin-top: m.vw(20);
                }
            }
        }

        &-pictures {
            flex-direction: column;
            justify-content: center;
            z-index: 12;
        }

        .grid {
            display: flex;
            flex-direction: column;
            position: relative;
            width: 100%;
            cursor: pointer;
            opacity: .3;
            transform: scale(1);

            &:after {
                content: "";
                position: absolute;
                width: 100%;
                height: 100%;
                background-color: transparent;
                border: 4px solid rgb(255 255 255 / .3);
                box-sizing: border-box;
                cursor: pointer;
                pointer-events: none;
            }

            &:hover {
                opacity: 1;
                transition: opacity .3s ease-in-out, transform .4s ease-in-out;
                transition-delay: 0s;

                .badge {
                    transform: translateY(0);

                    &s {
                        opacity: 1;
                    }

                    @for $i from 2 through 3 {
                        &:nth-of-type(#{$i}) {
                            transition-delay: #{($i - 1) * .05}s;
                        }
                    }
                }
            }

            &s {
                display: grid;
                gap: 10px;
                width: 100%;
                max-width: 1200px;
                margin: 0 auto;
            }

            &-1 {
                grid-column: 1 / 3;
            }

            &-2 {
                grid-column: 3;
                grid-row: 1 / 3;
            }

            &-4 {
                grid-column: 1;
                grid-row: 2 / span 2;
            }

            &-7 {
                grid-column: 2 / span 3;
            }

            @for $i from 7 to 1 {
                &-#{$i} {
                    transition-delay: #{(7 - $i) * .1}s;
                }
            }

            .button-slide {
                display: flex;
                width: 100%;
                height: 100%;
            }

            img {
                width: 100%;
                height: 100%;
                aspect-ratio: 16 / 9;
                object-fit: cover;
                pointer-events: none;
            }

            .badge {
                @include m.fonts("a");
                transform: translateY(-10px);
                transition: transform .3s ease-in-out;

                &s {
                    position: absolute;
                    bottom: m.vw(4);
                    left: 0;
                    opacity: 0;
                    transition: opacity .2s ease-in-out;
                    pointer-events: none;
                }
            }
        }

        &-account {
            flex-direction: column;
        }

        &-map {
            flex-direction: column;
            justify-content: center;
        }

        .account {
            display: flex;
            flex-direction: column;
            justify-content: center;
            width: calc(50% - 5px);
            margin-top: 10px;

            &:nth-of-type(odd) {
                margin-right: 5px;
            }

            &:nth-of-type(even) {
                margin-left: 5px;
            }

            &s {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                margin: 0 auto;
                max-width: 80%;
            }

            .title {
                display: flex;
                font-size: m.$fontTitle;
                color: m.$black;
                font-weight: 400;
            }

            .text {
                display: flex;
                margin-top: 10px;

                input[type="text"] {
                    border: none;
                    padding: 0;
                    font-size: m.$fontBody;
                    color: m.$black;
                    font-weight: 700;
                }
            }

            .button-copy {
                display: flex;
                justify-content: center;
                align-items: center;
                margin-top: 5px;
                padding: 10px 0;
                border-radius: 5px;
                background-color: m.$black;
                color: m.$white;
                font-size: m.$fontBody;
                font-weight: 700;
            }
        }
    }

    .slide {
        &-wrap {
            width: 100%;

            > li {
                position: relative;
            }

            .img {
                display: flex;
                position: relative;
                width: 100%;
                height: 100%;
                pointer-events: none;

                img {
                    position: absolute;
                    top: 0;
                    right: 0;
                    bottom: 0;
                    left: 0;
                    width: 100%;
                    height: auto;
                    max-width: 100%;
                    max-height: 100%;
                    object-fit: contain;
                    margin: auto;
                }
            }
        }

        &s {
            > ul {
                display: flex;
                width: 100%;
                height: 100%;
            }
        }
    }

    .layer {
        display: none;
        position: fixed !important;
        bottom: 0;
        left: 0;
        width: 100%;
        height: calc(100% - #{m.$headerHeight} - 50px);
        padding: 80px m.vw(20) m.vw(20);
        box-sizing: border-box;
        background-color: rgb(255 255 255 / 1);
        border-radius: 20px 20px 0 0;
        box-shadow: 0 0 80px 0 rgb(0 0 0 / .5);
        opacity: 0;
        transform: translateY(50px);
        transition: opacity .3s ease-in-out, transform .5s ease-in-out;
        isolation: isolate;

        &:before {
            //content: "";
            position: fixed;
            top: #{-(#{m.$headerHeight} + 50px)};
            left: 0;
            width: 100%;
            height: calc(100% + #{m.$headerHeight} + 50px);
            background-color: transparent;
        }

        &.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        [aria-label="close"] {
            position: absolute;
            right: 20px;
            top: 20px;
            font-size: m.$fontBody;
            padding: 5px 10px;
        }

        &-toast {
            display: flex;
            justify-content: center;
            align-items: center;
            position: fixed;
            top: 100px;
            left: 50%;
            max-width: 80%;
            padding: 10px 20px;
            box-sizing: border-box;
            font-size: m.$fontBody;
            font-weight: 700;
            background-color: rgb(255 255 255 / .9);
            border-radius: 5px;
            box-shadow: 0 0 20px 0 rgb(0 0 0 / .1);
            opacity: 0;
            transform: translate(-50%, 30px);
            transition: opacity .5s ease-in-out, transform .3s ease-in-out;
            pointer-events: none;

            &.active {
                transform: translate(-50%, 0);
                opacity: 1;
            }

            &:after {
                content: "";
                position: absolute;
                width: 100%;
                height: 100%;
            }
        }
    }

    .downUp {
        opacity: 0;
        animation-name: downUp, fadeIn;
        animation-duration: .5s, .7s;
        animation-timing-function: cubic-bezier(.2, .81, .6, 1);
        animation-fill-mode: forwards;

        @for $i from 0 to 11 {
            &:nth-child(#{$i + 1}) {
                animation-delay: #{($i) * .3}s;
            }
        }
    }

    .spin {
        opacity: 0;
        transform: rotateY(-90deg);
        animation-name: spin, fadeIn;
        animation-duration: 1.5s, 1.8s;
        animation-timing-function: cubic-bezier(.2, .81, .6, 1);
        animation-fill-mode: forwards;

        @for $i from 0 to 11 {
            &:nth-child(#{$i + 1}) {
                animation-delay: #{($i) * .3}s;
            }
        }
    }

    $badges: ("orange": "rgb(255, 158, 158)", "violet": "rgb(106, 116, 249)", "blue": "rgb(0, 170, 255)");
    .badge {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        padding: 3px;
        margin-top: m.vw(4);
        margin-right: 2px;
        box-sizing: border-box;
        border-radius: 3px;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-size: 8px;
        font-weight: 400;
        color: #fff;

        &s {
            display: flex;
            width: 100%;
            flex-wrap: wrap;
            padding: 0 m.vw(4);
            box-sizing: border-box;
        }

        @each $name, $rgb in $badges {
            &-#{$name} {
                background-color: #{$rgb};
            }
        }
    }

    .map {
        width: 100%;
        aspect-ratio: 3 / 2;
        max-height: 70vh;
        max-width: 1200px;
        margin: 0 auto;
    }

    .address {
        display: flex;
        font-size: m.$fontSub;

        + .address {
            margin-top: 4px;
        }

        .title {
            flex-shrink: 0;
            width: 70px;
        }

        &es {
            display: flex;
            flex-direction: column;
            position: absolute;
            left: 50%;
            bottom: 100%;
            margin-bottom: 10px;
            width: 280px;
            max-width: 90vw;
            background-color: rgb(255 255 255 / .9);
            box-shadow: 0 0 10px rgb(0 0 0 / .3);
            border-radius: 5px;
            padding: 10px 14px;
            box-sizing: border-box;
            transform: translateX(-50%);
        }

        &-wrap {
            .link {
                position: absolute;
                top: 100%;
                left: 50%;
                margin-top: 10px;
                white-space: nowrap;
                background-color: rgb(255 255 255 / .9);
                box-sizing: border-box;
                padding: 4px 8px;
                box-shadow: 0 0 10px rgb(0 0 0 / .3);
                transform: translateX(-50%);
                border-radius: 5px;
                font-weight: 900;
                font-size: m.$fontSub;
                color: m.$black;
                text-decoration: none;
            }

            .marker {
                display: inline-flex;
                position: relative;
                width: 34px;
                height: 34px;
                border-radius: 17px 17px 17px 0;
                background: #ff00c2;
                box-shadow: 0 0 10px 0 rgb(0 0 0 / .3);
                border: 3px solid #fff;
                box-sizing: border-box;
                transform: rotate(-45deg);

                &::after {
                    content: "";
                    position: absolute;
                    top: 5px;
                    left: 50%;
                    width: 12px;
                    height: 12px;
                    border-radius: 6px;
                    background-color: #fff;
                    transform: translateX(-50%);
                    box-shadow: 1px 1px 2px 0 rgba(0, 0, 0, 0.2) inset;
                }
            }
        }
    }

    .fix-address {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        gap: 10px;
        width: 100%;
        padding: 10px;
        box-sizing: border-box;
        position: sticky;
        bottom: calc(constant(safe-area-inset-bottom) + 12px);
        bottom: calc(env(safe-area-inset-bottom) + 12px);
        left: 0;
        font-size: m.$fontSub;
        background-color: rgb(255 255 255 / .8);
        opacity: 0;
        pointer-events: none;

        address {
            font-style: normal;
        }
    }

    .background {
        &s {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        $particleNum: 200;
        $particleColor: hsl(180, 100%, 80%);

        position: absolute;
        transform: translateY(-10vh);
        animation-iteration-count: infinite;
        animation-timing-function: linear;

        .circle {
            display: inline-block;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            mix-blend-mode: screen;
            background-image: radial-gradient(
                    hsl(0, 0%, 100%),
                    hsl(0, 0%, 100%) 10%,
                    hsla(180, 100%, 80%, 0) 56%
            );

            animation: fadein-frames 200ms infinite, scale-frames 2s infinite;

            @keyframes fade-frames {
                0% {
                    opacity: 1;
                }

                50% {
                    opacity: 0.7;
                }

                100% {
                    opacity: 1;
                }
            }

            @keyframes scale-frames {
                0% {
                    transform: scale3d(0.4, 0.4, 1);
                }

                50% {
                    transform: scale3d(2.2, 2.2, 1);
                }

                100% {
                    transform: scale3d(0.4, 0.4, 1);
                }
            }
        }

        $particleBaseSize: 4;

        @for $i from 1 through $particleNum {
            &:nth-child(#{$i}) {
                $circleSize: math.random($particleBaseSize);
                width: $circleSize + px;
                height: $circleSize + px;

                $startPositionY: math.random(10) + 100;
                $framesName: "move-frames-" + $i;
                $moveDuration: 48000 + math.random(9000) + ms;

                animation-name: #{$framesName};
                animation-duration: $moveDuration;
                animation-delay: math.random(37000) + ms;

                @keyframes #{$framesName} {
                    from {
                        transform: translate3d(math.random(100) + vw, $startPositionY + vh, 0);
                    }

                    to {
                        transform: translate3d(math.random(100) + vw, -$startPositionY - math.random(30) + vh, 0);
                    }
                }

                .circle {
                    animation-delay: math.random(8000) + ms;
                }
            }
        }
    }
}